/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : ADC1.h
**     Project   : Project_2
**     Processor : MC9S12NE64CPV
**     Component : Init_ADC
**     Version   : Component 01.196, Driver 01.11, CPU db: 2.87.134
**     Compiler  : CodeWarrior HC12 C Compiler
**     Date/Time : 2013-12-02, 12:18
**     Abstract  :
**          This file implements the ADC (ADC) module initialization
**          according to the Peripheral Initialization Component settings,
**          and defines interrupt service routines prototypes.The ADC module
**          is an 8-channel (16-channel), 10-bit, multiplexed input successive
**          approximation analog-to-digital converter. Refer to device electrical
**          specifications for ATD accuracy. The block is designed to be
**          upwards compatible with the 68HC11 standard 8-bit A/D converter.
**          In addition, there are new operating modes that are unique to
**          the HC12 design.
**          Features :
**          - 8/10 Bit Resolution.
**          - 7msec, 10-Bit Single Conversion Time.
**          - Sample Buffer Amplifier.
**          - Programmable Sample Time.
**          - Left/Right Justified, Signed/Unsigned Result Data.
**          - External Trigger Control.
**          - Conversion Completion Interrupt Generation.
**          - Analog Input Multiplexer for 8 (16)Analog Input Channels.
**          - Analog/Digital Input Pin Multiplexing.
**          - 1 to 8 (1 to 16)Conversion Sequence Lengths.
**          - Continuous Conversion Mode.
**          - Multiple Channel Scans.
**     Settings  :
**          Component name                                 : ADC1
**          Device                                         : ADC
**          Settings:
**            Clock settings:
**              Sample Time                                : 16 A/D conversion clock periods
**              Prescaler                                  : 24
**              Frequency                                  : 500 kHz (calculated value, for information only)
**              ConvTime                                   : 56 us  (calculated value, for information only)
**            Conv. sequence length                        : 8
**            Conversion mode                              : Continuous conversion
**            Channel sample mode                          : Across several channels
**            Fast flag clear all                          : Enabled
**            Wrap around channel                          : AN7
**            External trigger                             : Disabled
**            External trigger control                     : Falling edge
**            Conv. results are placed in                  : Corresponding result register
**            Result data formats                          : 10-bit/left justified/unsigned
**            Background debug freeze                      : Freeze Immediately
**            Special channel conversion                   : Disabled
**            Power down in Wait mode                      : Disabled
**          Pins/Signals:
**            Input Pin0                                   : PAD0_AN0
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin1                                   : PAD1_AN1
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin2                                   : PAD2_AN2
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin3                                   : PAD3_AN3
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin4                                   : PAD4_AN4
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin5                                   : PAD5_AN5
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin6                                   : PAD6_AN6
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**            Input Pin7                                   : PAD7_AN7
**              Pin Signal                                 : 
**              Digital Input                              : Disabled
**          Interrupts:
**            Sequence Complete                            : Enabled
**            Interrupt                                    : Vatd
**            Priority                                     : 1
**            ISR name                                     : adc_isr
**          Initialization:
**            Call Init in CPU init. code                  : yes
**            Module                                       : Enabled
**            Start ADC conversion                         : yes
**            Initial channel select                       : AN0
**            Generate recovery delay                      : yes
**     Contents  :
**         Init - void ADC1_Init(void);
**
**     Copyright : 1997 - 2010 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/
#ifndef __ADC1
#define __ADC1

/* MODULE ADC1. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited components */

#include "Cpu.h"





void ADC1_Init(void);
/*
** ===================================================================
**     Method      :  ADC1_Init (component Init_ADC)
**
**     Description :
**         This method initializes registers of the ADC module
**         according to this Peripheral Initialization Component settings.
**         Call this method in user code to initialize the module.
**         By default, the method is called by PE automatically; see
**         "Call Init method" property of the component for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see ADC1.c file for more information).
** ===================================================================
*/
#pragma CODE_SEG __NEAR_SEG NON_BANKED
__interrupt void adc_isr(void);
#pragma CODE_SEG DEFAULT
/* END ADC1. */

#endif /* ifndef __ADC1 */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.02 [04.44]
**     for the Freescale HCS12 series of microcontrollers.
**
** ###################################################################
*/
