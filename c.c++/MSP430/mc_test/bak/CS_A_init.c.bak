/*
 *  This file is automatically generated and does not require a license
 *
 *  ==== WARNING: CHANGES TO THIS GENERATED FILE WILL BE OVERWRITTEN ====
 *
 *  To make changes to the generated code, use the space between existing
 *      "USER CODE START (section: <name>)"
 *  and
 *      "USER CODE END (section: <name>)"
 *  comments, where <name> is a single word identifying the section.
 *  Only these sections will be preserved.
 *
 *  Do not move these sections within this file or change the START and
 *  END comments in any way.
 *  ==== ALL OTHER CHANGES WILL BE OVERWRITTEN WHEN IT IS REGENERATED ====
 *
 *  This file was generated from
 *      C:/ti/grace/grace_2_20_02_32/packages/ti/mcu/msp430/csl2/clock/CS_A_init.xdt
 */
#include <driverlib/MSP430FR5xx_6xx/inc/hw_memmap.h>
#include <driverlib/MSP430FR5xx_6xx/cs.h>

/* USER CODE START (section: CS_A_init_c_prologue) */
/* User defined includes, defines, global variables and functions */
/* USER CODE END (section: CS_A_init_c_prologue) */

/*
 *  ======== CS_A_graceInit ========
 *  Initialize MSP430 Clock System
 */
void CS_A_graceInit(void)
{

    /* USER CODE START (section: CS_A_graceInit_prologue) */
    /* User initialization code */
    /* USER CODE END (section: CS_A_graceInit_prologue) */

    /*
     * Setting MCLK source from CS_DCOCLK_SELECT with the divider of CS_CLOCK_DIVIDER_1.
     */
    CS_clockSignalInit (CS_BASE, CS_MCLK, CS_DCOCLK_SELECT, CS_CLOCK_DIVIDER_1);

    /*
     * Setting SMCLK source from CS_DCOCLK_SELECT with the divider of CS_CLOCK_DIVIDER_8.
     */
    CS_clockSignalInit (CS_BASE, CS_SMCLK, CS_DCOCLK_SELECT, CS_CLOCK_DIVIDER_8);

    /*
     * Setting ACLK source from CS_VLOCLK_SELECT with the divider of CS_CLOCK_DIVIDER_1.
     */
    CS_clockSignalInit (CS_BASE, CS_ACLK, CS_VLOCLK_SELECT, CS_CLOCK_DIVIDER_1);

    /*
     * Set DCO frequency to 8000000 Hz
     */
    CS_setDCOFreq (CS_BASE, CS_DCORSEL_0, CS_DCOFSEL_6);

    /*
     * Clears all oscillator fault flags including global oscillator fault flag
     * before switching clock sources
     */
    CS_clearAllOscFlagsWithTimeout (CS_BASE, 100000);

    /*
     * MCLK clock request enable. Setting this enables conditional module requests for MCLK
     */
    CS_disableClockRequest (CS_BASE, CS_MCLK);

    /*
     * SMCLK clock request enable. Setting this enables conditional module requests for SMCLK
     */
    CS_disableClockRequest (CS_BASE, CS_SMCLK);

    /*
     * ACLK clock request enable. Setting this enables conditional module requests for ACLK
     */
    CS_disableClockRequest (CS_BASE, CS_ACLK);

    /* USER CODE START (section: CS_A_graceInit_epilogue) */
    /* User code */
    /* USER CODE END (section: CS_A_graceInit_epilogue) */
}
